// <auto-generated />
using System;
using Demo.EFCoreWithPostgres.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Demo.EFCoreWithPostgres.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    [Migration("20210416183425_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Demo.EFCoreWithPostgres.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("double precision");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2021, 4, 16, 0, 0, 0, 0, DateTimeKind.Local),
                            Name = "Product One",
                            UnitPrice = 1.5
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2021, 4, 16, 0, 0, 0, 0, DateTimeKind.Local),
                            Name = "Product Two",
                            UnitPrice = 2.5
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 11, 17, 0, 0, 0, 0, DateTimeKind.Local),
                            Name = "Old Product",
                            UnitPrice = 3.5499999999999998,
                            UpdatedOn = new DateTime(2021, 4, 16, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2021, 4, 16, 0, 0, 0, 0, DateTimeKind.Local),
                            Name = "Expensive Product",
                            UnitPrice = 150.99000000000001,
                            UpdatedOn = new DateTime(2021, 4, 16, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
